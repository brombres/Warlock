nativeHeader @|void test_fetch();

nativeCode
@|#include <emscripten/fetch.h>
 |
 |void downloadSucceeded(emscripten_fetch_t *fetch) {
 |  printf("Finished downloading %llu bytes from URL %s.\n", fetch->numBytes, fetch->url);
 |  // The data is now available at fetch->data[0] through fetch->data[fetch->numBytes-1];
 |  emscripten_fetch_close(fetch); // Free data associated with the fetch.
 |}
 |
 |void downloadFailed(emscripten_fetch_t *fetch) {
 |  printf("Downloading %s failed, HTTP failure status code: %d.\n", fetch->url, fetch->status);
 |  emscripten_fetch_close(fetch); // Also free data on failure.
 |}
 |
 |void test_fetch()
 |{
 |  emscripten_fetch_attr_t attr;
 |  emscripten_fetch_attr_init(&attr);
 |  strcpy(attr.requestMethod, "GET");
 |  attr.attributes = EMSCRIPTEN_FETCH_LOAD_TO_MEMORY;
 |  attr.onsuccess = downloadSucceeded;
 |  attr.onerror = downloadFailed;
 |  emscripten_fetch(&attr, "Downloads/Macross.png");
 |}


native @|test_fetch();

 #@trace Bitmap(File("Assets/Images/Macross.png")).size

Display.state = DisplayState() subclass
  METHODS
    method on_draw
      Renderer.clear( Color.BLUE )
      Line(XY(-1,-1),XY(1,1)).draw( Color.WHITE )
endSubclass

