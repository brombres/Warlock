uses Warlock

Display.state = DisplayState() subclass
  PROPERTIES
    cards = Image[]
    falling_cards = FallingCard[]

  METHODS
    method on_start
      forEach (i in 1..52)
        cards.add( Image( InternalAsset("Card-$.png"(i.format("02"))) ) )
      endForEach

    method on_draw
      Renderer.clear( Color(0xcccccc) )

      (forEach in falling_cards).draw

    method on_update
      if (Random.chance(0.5))
        local card = cards.random
        if (card.is_ready)
          falling_cards.add( FallingCard(card) )
        endIf
      endIf

      (forEach in falling_cards).update
      falling_cards.discard( $.card.position.y > Display.height+$.card.size.y )
endSubclass

class FallingCard
  PROPERTIES
    card  : Sprite
    scale = Random.real(0.25,0.5) : Real
    rotation_speed = Radians( Degrees(Random.real(-12,12)) )

  METHODS
    method init( card_image:Image )
      card = Sprite( card_image )
      card.scale = scale
      card.position = XY( Random.real(Canvas.width), -card.size.y )

    method draw
      card.draw

    method update
      card.rotation += rotation_speed * Display.dt
      card.position += XY(0,240*scale*Display.dt)
endClass
