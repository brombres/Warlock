library AssetCompiler

class AssetGroup
  GLOBAL PROPERTIES
    next_id : Int

  GLOBAL METHODS
    method .next_id->Int
      ++next_id
      return next_id

  PROPERTIES
    id        : Int
    assets    = Asset[]
    filename  : String    # Base filename of texture atlas pages.
    filepaths = String[]  # All atlas pages composing this group.
    atlases   = String[]
    pages     : AtlasPage[]

  METHODS
    method init
      id = .next_id

      use file_letter = StringPool
        base26( id-1, file_letter )
        filename = "TextureAtlas-$"(file_letter)
      endUse

    method init( group_assets:Asset[], group_info:Variant )
      temporarily assets = group_assets  # assets will be permanently added to group later
        (forEach in assets).group = this
        if local info = group_info[hash]
          id = info//id
          next_id .= or_larger( id )
          filename = info//filename
        else
          init
        endIf
      endTemporarily

    method add( asset:Asset )
      assets.add( asset )

    method base26( n:Int, builder:String )
      if (n >= 26) base26( n/26, builder )
      builder.print( ('A' + (n % 26))->Character )

    method build_texture_atlas
      pages = ImagePacker( this ).pack( assets )

    method has_modified_assets->Logical
      if (assets.is_empty) return false
      if ((forEach in assets).is_modified) return true
#trace atlases
      if (atlases.is_empty) return true

      return false

    method hash->Int
      local result = assets.count
      result ~= ((forEach in assets).filepath.hashcode)
      return result

    method to->Variant
      local result = @{ id, hash, filename, assets:[], placements:{}, pages:[] }

      local asset_filepaths = result//assets
      local placements = result//placements
      forEach (asset in assets)
        asset_filepaths.add( asset.filepath )
        placements[asset.filepath] = asset.placement_info
      endForEach

      local page_filepaths = result//pages
      forEach (page in pages) page_filepaths.add( page.build_filepath )

      return result
endClass
