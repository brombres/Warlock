library Warlock

class TextureImage : Image
  PROPERTIES
    texture     : Texture
    image_index : Int

  METHODS
    method init( texture )
      internal_size = texture.size
      size = internal_size

    method init( asset, image_index )
      internal_size = asset.images[image_index].bounds.size
      size          = internal_size

    method init( asset_name:String )
      local asset = AssetManager.find_image( asset_name )
      if (asset)
        init( asset, 0 )
      else
        println "No such image: " + asset_name
      endIf

    method .inner_draw [override]
      .begin_draw

      local is_foreground = attributes.foreground

      if (not is_foreground)
        if (texture)        Renderer.fill( Box(internal_size), texture, color )
        else                Renderer.fill( Box(internal_size), color )
      endIf

      .draw

      if (is_foreground)
        if (texture)        Renderer.fill( Box(internal_size), texture, color )
        else                Renderer.fill( Box(internal_size), color )
      endIf

      .end_draw

    method .prepare [override]
      if (not texture and asset)
        texture = asset.images[image_index].texture  # actually loads texture if necessary
      endIf
endClass
