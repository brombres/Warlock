library Warlock

nativeHeader @|#include <SDL3/SDL.h>

SDL  # instance SDL singleton on launch

class SDL : Framework [singleton]
  NATIVE
    nativeCode
    @|bool WarlockSDL_event_filter( void* data, SDL_Event* event )
     |{
     |  if (event->type == SDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED)
     |  {
     |    WarlockSDL__on_window_resized__RogueInt( event->window.windowID );
     |  }
     |
     |  return true;
     |}

  GLOBAL METHODS
    method on_window_resized( window_id:Int ) [api]
      forEach (window in Warlock.windows)
        if (native("SDL_GetWindowID($window->sdl_window) == $window_id")->Logical)
          SDL.update_window_size( window )
          Renderer.on_window_resized( window )
          return
        endIf
      endForEach

  METHODS
    method init
      Framework = this
      Renderer  # initialize

    method configure
      if (is_configured) return

      if (native("SDL_Init(SDL_INIT_VIDEO)")->Int != 0)
        error.println "[SDL Error] Failed to initialize SDL: $."(error)
        return
      endIf

      is_configured = true

    method create_window( window:Window )->Logical
      native @|SDL_WindowFlags flags = 0;
      native @|flags |= SDL_WINDOW_RESIZABLE;
      if (System.is_macos) native @|flags |= SDL_WINDOW_METAL;

      native
      @|$window->sdl_window =
       |  SDL_CreateWindow(
       |    $window->title->data->as_utf8,
       |    (int)$window->size.x, (int)$window->size.y,
       |    flags
       |  );

      if (not native("!!$window->sdl_window")->Logical)
        Global.error.println "Failed to create SDL window: $."(SDL.error)
        return false
      endIf

      native @|SDL_SetEventFilter( WarlockSDL_event_filter, $window->sdl_window );

      native @|SDL_RaiseWindow( $window->sdl_window );

      return true

    method error->String
      return native("RogueString_create(SDL_GetError())")->String

    method update_window_size( window:Window )
      native
      @|int w, h;
       |SDL_GetWindowSize( $window->sdl_window, &w, &h );
       |$window->size.x = w;
       |$window->size.y = h;

endClass

augment Warlock::Window
  PROPERTIES
    native "SDL_Window* sdl_window;"
    native "void* native_window_handle;"
endAugment
