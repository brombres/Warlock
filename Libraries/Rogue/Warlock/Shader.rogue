library Warlock

class Shader
  GLOBAL PROPERTIES
    ALPHA_COLOR            : Shader
    ALPHA_TEXTURE          : Shader
    ALPHA_COLOR_ADDITIVE   : Shader
    ALPHA_TEXTURE_ADDITIVE : Shader

  PROPERTIES
    program      : ShaderProgram
    source_blend : BlendMode
    dest_blend   : BlendMode
    uniforms     : ShaderUniforms

  METHODS
    method init( filename:String, source_blend=BlendMode.ONE, dest_blend=BlendMode.INVERSE_SOURCE_ALPHA )
      program = ShaderProgram( filename )

    method apply_uniforms
      program.uniforms = uniforms
      program.apply_uniforms

    method load
      program.load

    method uniforms->ShaderUniforms
      return ensure<<@uniforms>>
endClass


class ShaderProgram
  GLOBAL PROPERTIES
    cache = [String:ShaderProgram]

  GLOBAL METHODS
    method create( filename:String )->ShaderProgram
      local existing = cache[filename]
      if (existing) return existing

      local program = ShaderProgram().[ filename=filename ]
      cache[filename] = program
      return program

  PROPERTIES
    filename : String
    uniforms : ShaderUniforms

  METHODS
    method has_uniforms->Logical
      return @uniforms

    method to->String
      return filename

endClass

class ShaderUniforms : [String:XYZW]
  METHODS
    method set( name:String, value:Logical )
      set( name, XYZW( which{value:1.0||0.0} ) )

    method set( name:String, value:Real )
      set( name, XYZW(value) )

    method set( name:String, value:XY )
      set( name, XYZW(value) )

    method set( name:String, value:XYZ )
      set( name, XYZW(value) )
endClass

