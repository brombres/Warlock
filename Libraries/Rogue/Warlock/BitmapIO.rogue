augment Graphics::Bitmap
  NATIVE
    nativeHeader @|#include "Utilities.h"

  GLOBAL METHODS
    method decode( bytes:Byte[] )->Bitmap
      local w, h : Int
      native
      @|int width, height, channels=4;
       |unsigned char* bytes = $bytes->as_bytes;
       |int count = (int)$bytes->count;
       |unsigned char* data = Warlock_decode_image( bytes, count, &width, &height, &channels );
       |$w = (RogueInt) width;
       |$h = (RogueInt) height;
      if (native("!data")->Logical) return null

      local result = Bitmap( w, h )
      native @|memcpy( $result->pixels->data, data, width*height*4 );
              |free( data );
      result.swap_red_and_blue
      return result

  METHODS
    #{
    method to_jpeg_bytes( quality=75:Int )->Byte[]
      if (System.is_macos) return MacOS.to_jpeg_bytes( this )
      return JPEGEncoder().encode( this, null, quality )

    method to_png_bytes->Byte[]
      if (System.is_macos) return MacOS.to_png_bytes( this )
      return PNGEncoder().encode( this, null )

    method to_tiff_bytes->Byte[]
      if (System.is_macos) return MacOS.to_tiff_bytes( this )
      println "ERROR: No software TIFF encoder available."
      return null
      }#
endAugment

#{
augment FreeTypeFace
  # Rogo directives required:
  # #$ LIBRARIES(macOS) = bzip2(flags:-lbz2)
  # #$ LIBRARIES(macOS) = freetype2
  # #$ LIBRARIES(Linux) = freetype2(install:libfreetype6-dev)

  NATIVE
    # Must include png.h before ft2build.h to fix an order-of-include issue with png and setjmp on Linux
    nativeHeader(0) @|#include <png.h>
endAugment
}#
