library Warlock

class Screen [singleton]
  PROPERTIES
    state      = ScreenState()
    is_started : Logical

  METHODS
    method change_state( new_state:ScreenState )
      state.change_state( new_state )

    method draw
      on_draw

    method draw( &bg )
      on_draw( &bg )

    method handle( e:KeyEvent )
      contingent
        on( e )
        necessary (not e.is_consumed)

        e.window.handle( e )
        necessary (not e.is_consumed)

        on_unhandled( e )
      endContingent

    method handle( e:PointerEvent )
      contingent
        on( e )
        necessary (not e.is_consumed)

        e.window.handle( e )
        necessary (not e.is_consumed)

        on_unhandled( e )
      endContingent

    method handle( e:ScrollEvent )
      contingent
        on( e )
        necessary (not e.is_consumed)

        e.window.handle( e )
        necessary (not e.is_consumed)

        on_unhandled( e )
      endContingent

    method handle( e:TextEvent )
      contingent
        on( e )
        necessary (not e.is_consumed)

        e.window.handle( e )
        necessary (not e.is_consumed)

        on_unhandled( e )
      endContingent

    method on( e:KeyEvent )

    method on( e:PointerEvent )

    method on( e:ScrollEvent )

    method on( e:TextEvent )

    method on_unhandled( e:KeyEvent )

    method on_unhandled( e:PointerEvent )

    method on_unhandled( e:ScrollEvent )

    method on_unhandled( e:TextEvent )

    method on_draw

    method on_draw( &bg )

    method on_start

    method on_update

    method on_update( dt:Real )

    method render
      Display = this

      state = state?.updated || ScreenState()
      state.on_render_begin
      state.draw

    method started->this
      if (not is_started)
        is_started = true
        on_start
      endIf
      return Screen

    method update
      on_update

    method update( dt:Real )
      on_update( dt )

endClass

