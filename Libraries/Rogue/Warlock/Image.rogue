library Warlock

class Image : Drawable2D
  GLOBAL METHODS
    method create( name:String )->Image
      return TextureImage( name )

  PROPERTIES
    asset_name : String
    asset      : AssetInfo

  METHODS
    method init( size, color=Color.WHITE )
      internal_size = size

    method draw( position:XY ) [override]
      use Display.transform_stack
        Display.push_transform( Matrix.transform(XYZ(position,z),size,anchor,rotation,internal_size) )
        .prepare
        .inner_draw
      endUse

    method draw( bounds:Box ) [override]
      use Display.transform_stack
        Display.push_transform( Matrix.transform(XYZ(bounds.position,z),bounds.size/internal_size) )
        .inner_draw
      endUse

    method .inner_draw
      local is_fg = attributes.fg

      if (not is_fg)
        if (color.argb) Renderer.fill( Box(internal_size), color )
      endIf

      on_draw

      if (count)
        (forEach as Drawable2D in children).draw
      endIf

      if (is_fg)
        if (color.argb) Renderer.fill( Box(internal_size), color )
      endIf

      on_end_draw

    method .prepare
      noAction
endClass
