library Warlock

nativeHeader @|#include "WarlockInterface.h"

uses Geometry [export]
uses Graphics [export]
uses Math/Matrix

class Warlock [essential singleton]
  GLOBAL METHODS
    method get_vs->Byte[] [api]
      local filepath = Warlock.find_asset( "/Assets/Shaders/AlphaColor-VS.bin" )
      if (filepath) return Byte[]( File(filepath) )
      else          return null

    method get_fs->Byte[] [api]
      local filepath = Warlock.find_asset( "/Assets/Shaders/AlphaColor-FS.bin" )
      if (filepath) return Byte[]( File(filepath) )
      else          return null

  PROPERTIES

  METHODS
    method init
      println "Initializing Warlock"

    method find_asset( name:String )->File?
      local filepath = native("WarlockInterface_find_asset($name)")->String
      if (filepath) return File( filepath )
      else          return null

      #{
    method find_image( name:String )->File?
      if local result = find_asset( name )
        return File(result)
      endIf

      if (not name.begins_with("Assets/"))
        if (name.begins_with("Images/")) name = "Assets"/name
        else                             name = "Assets/Images"/name
      endIf

      if local result = find_asset( name )
        return File(result)
      endIf

      forEach (ext in image_extensions)
        local filepath = "$.$"(name,ext)
        if local result = find_asset( filepath )
          return File(result)
        endIf
      endForEach

      return null
      }#

endClass
