library Warlock

class UpdateRegulator
  PROPERTIES
    frame_timer = Timer()
    fps_timer   = Timer()
    max_fps     = 60
    next_fps    = 0        # Accumulated frame count over current 1s interval.
    time_debt   = 0.0

  METHODS
    method reset
      init_object
      Warlock.dt = 1.0 / 60.0
      Warlock.delta_ticks = 1
      time_debt = 0
      Warlock.fps = max_fps
      frame_timer.restart
      fps_timer.restart

    method update
      local elapsed_s = frame_timer.elapsed
      frame_timer.restart

      ++next_fps
      if (fps_timer.elapsed >= 1.0)
        fps_timer.restart
        Warlock.fps = next_fps
        max_fps .= or_larger( Warlock.fps )
        next_fps = 0
      endIf

      if (elapsed_s >= 1.0)
        Warlock.dt = 1.0 / 60.0
        Warlock.delta_ticks = 1
        time_debt = 0
        Warlock.fps = max_fps
      elseIf (elapsed_s <= 0)
        Warlock.dt = 0
        Warlock.delta_ticks = 0
      else
        Warlock.dt = elapsed_s
        time_debt += elapsed_s
        Warlock.delta_ticks = (time_debt * 60)->Int
        time_debt -= Warlock.delta_ticks / 60.0
      endIf
      Warlock.ticks += Warlock.delta_ticks

endClass
