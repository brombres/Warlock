module Warlock

class ProjectionMode [abstract]
  METHODS
    method apply  [abstract]
endClass

class ProjectionMode2DX : ProjectionMode
  PROPERTIES
    z      : Real
    max_z  : Real

  METHODS
    method init( z=Display.default_z, max_z=-4000.0 )

    method apply
      local width   = Display.width
      local height  = Display.height
      local k = (-z + 1) * 2
      Display.z = z
      local locus_sx = Display.perspective_center.x / width
      local locus_sy = Display.perspective_center.y / height
      local left = ((-2 * width) / k)  * locus_sx
      local top  = ((-2 * height) / k) * locus_sy
      local right = left + 2*width/k
      local bottom = top + 2*height/k

      # Don't invert offscreen buffers or else they'll be double-inverted when they're redrawn
      if (Renderer.display_target.is_offscreen) swapValues( top, bottom )

      Renderer.projection_transform = ...
        Matrix.projection( left, top, right, bottom, 1, (-max_z*k)/3 ) ...
        * Matrix.translate( XYZ(-width*locus_sx+Display.offset.x,-height*locus_sy+Display.offset.y,0) )

endClass

