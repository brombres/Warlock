module Warlock

class ProjectionMode [abstract]
  PROPERTIES
    nominal_z = -2000.0 # for 2D graphics

    perspective_center = XY(0.5,0.5)
    # 0.0 to 1.0
    #
    # The "origin" for 3D perspective and the vanishing point for polygons
    # parallel to the camera axis.  Automatically reset to Display.center at
    # the beginning of every draw.


  METHODS
    method apply  [abstract]
endClass

class ProjectionMode2DX : ProjectionMode
  PROPERTIES
    max_z  = -4000.0

  METHODS
    method apply
      local width   = Canvas.size.x
      local height  = Canvas.size.y
      local k = (-nominal_z + 1) * 2
      local left = ((-2 * width) / k)  * perspective_center.x
      local top  = ((-2 * height) / k) * perspective_center.y
      local right = left + 2*width/k
      local bottom = top + 2*height/k

      # Don't invert offscreen buffers or else they'll be double-inverted when they're redrawn
      if (Canvas.is_offscreen) swapValues( top, bottom )

      Canvas.projection_transform = ...
          Matrix.perspective( left, top, right, bottom, 1, (-max_z*k)/3 ) ...
            * Matrix.translate(
              XYZ(
                -width * perspective_center.x,  # + Display.offset.x,
                -height * perspective_center.y,  # + Display.offset.y,
                0
              )
            )

endClass

