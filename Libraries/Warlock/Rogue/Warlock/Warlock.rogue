module Warlock

nativeHeader @|#include "NativeInterface.h"

uses Geometry [export]
uses Graphics [export]

$include RenderCmdData
$include RenderCmd
$include Renderer
$include ResourceBank
$include Vertex
$include Window

class Warlock [essential singleton]
  PROPERTIES
    windows = ResourceBank<<Window>>()

  METHODS
    method init
      Window( "Rogue Warlock" )

  GLOBAL PROPERTIES
    degrees = Degrees(0)

  GLOBAL METHODS
    method begin_render( window_id:Int )->RenderCmdData[] [api]
      local pt = XY(0,-0.5).rotated( degrees )
      degrees += Degrees(1)

      local triangle = Triangle(
        pt,
        pt.rotated( Degrees(120) )
        pt.rotated( Degrees(240) )
      )
      Renderer.fill( triangle, Color.YELLOW )
      Renderer.draw( triangle, Color.RED )

      return Renderer.finalized_cmd_data

    method end_render( window_id:Int ) [api]
      Renderer.clear

endClass
